OFF.java

package ccoew.it.i3.businesslogic;

public class OFF extends State 
{
	public void PowerOFF()
	{
		System.out.println("Current State :- OFF");
		System.out.println("OFF State Remains In The OFF State.");
		super.PowerOFF();
	}	
}

ON.java

package ccoew.it.i3.businesslogic;

public class ON extends State 
{
	public void PowerON()
	{
		System.out.println("Current State :- ON");
		System.out.println("OFF State Changed To Warming State.");
		super.PowerON();
	}
	
	
}

Ready.java

package ccoew.it.i3.businesslogic;

public class Ready extends State
{
	public void StartButtonPushed()
	{
		System.out.println("Current State :- Ready");
		System.out.println("Ready State Changed To Copying State.");
		super.StartButtonPushed();
	}
}

Warming.java

package ccoew.it.i3.businesslogic;

public class Warming extends State
{
	public void AfterInitialCheck()
	{
		System.out.println("Current State :- Warming");
		System.out.println("Warming State Changed To Ready State.");
		super.AfterInitialCheck();
	}
}

Copying.java

package ccoew.it.i3.businesslogic;

public class Copying extends State
{
	public void AfterCopying()
	{
		System.out.println("Current State :- Copying");
		System.out.println("Copying State Changed To Ready State.");
		super.AfterCopying();
	}
}


CopyMachine.java

package ccoew.it.i3.businesslogic;

public class CopyMachine 
{
	State CurrentState;

	public State getCurrentState() 
	{
		return CurrentState;
	}

	public void setCurrentState(State currentState) 
	{
		CurrentState = currentState;
	}
}

State.java

package ccoew.it.i3.businesslogic;

public abstract class State 
{
	public void PowerOFF()
	{
		System.out.println("Initial condition.\n");
	}
	
	public void PowerON()
	{
		System.out.println("Ready Light Starts Flashing.\n");
	}
	
	public void AfterInitialCheck()
	{
		System.out.println("Ready Light Is Turned ON And It Displays The Number Of Copies As One And Size As Normal On The Display Panel.\n");
	}
	
	public void StartButtonPushed()
	{
		System.out.println("Copying Proceed Until All Copies Are Complete.\n");
	}
	
	public void AfterCopying()
	{
		System.out.println("Copy Machine Goes To The Ready State.\n");
	}
}

Test.java

package ccoew.it.i3.client;

import ccoew.it.i3.businesslogic.*;

public class Test 
{
	public static void main(String args[])
	{
		CopyMachine CM = new CopyMachine();
		CM.setCurrentState(new OFF());
		CM.getCurrentState().PowerOFF();
		CM.setCurrentState(new ON());
		CM.getCurrentState().PowerON();
		CM.setCurrentState(new Warming());
		CM.getCurrentState().AfterInitialCheck();
		CM.setCurrentState(new Ready());
		CM.getCurrentState().StartButtonPushed();
		CM.setCurrentState(new Copying());
		CM.getCurrentState().AfterCopying();
	}
}


//output

Current State :- OFF
OFF State Remains In The OFF State.
Initial condition.

Current State :- ON
OFF State Changed To Warming State.
Ready Light Starts Flashing.

Current State :- Warming
Warming State Changed To Ready State.
Ready Light Is Turned ON And It Displays The Number Of Copies As One And Size As Normal On The Display Panel.

Current State :- Ready
Ready State Changed To Copying State.
Copying Proceed Until All Copies Are Complete.

Current State :- Copying
Copying State Changed To Ready State.
Copy Machine Goes To The Ready State.

