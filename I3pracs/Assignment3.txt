
State.java

package ccoew.it.i3.businesslogic;

public enum State 
{
	OFF, Warming, Ready, Copying;
}

CopyMachine.java

package ccoew.it.i3.businesslogic;

public class CopyMachine 
{
	private State CurrentState;
	
	public CopyMachine(State CurrentState) 
	{
		super();
		this.CurrentState = CurrentState;
	}
	
	public State getCurrentState() 
	{
		return CurrentState;
	}

	public void setCurrentState(State currentState)
	{
		CurrentState = currentState;
	}
	
	public CopyMachine()
	{
		this.CurrentState = State.OFF;
	}
	
	public void PowerOFF()
	{
		if(this.getCurrentState().equals(State.OFF))
		{
			System.out.println("Current State :- " +getCurrentState());
			System.out.println("Machine Is In OFF State.\n");
		}
	}
	
	public void PowerON()
	{
		if(this.getCurrentState().equals(State.OFF))
		{
			System.out.println("Current State :- " +getCurrentState());
			System.out.println("\nOFF State Changed To Warming State.\n");
			System.out.println("\nReady Light Starts Flashing.");
			this.setCurrentState(State.Warming);
		    System.out.println("Current State :- " +getCurrentState());
		}	
	}
	
	public void AfterInitialCheck()
	{
		if(this.getCurrentState().equals(State.Warming))
		{
			System.out.println("Ready Light Is Turned On And It Displays The Number Of Copies As One And Size As Normal On The Display Panel.");
			System.out.println("Warming State Changed To Ready State.\n");
			this.setCurrentState(State.Ready);
			System.out.println("Current State :- " +getCurrentState());
			
		}
	}
	
	public void StartButtonPushed()
	{
		if(this.getCurrentState().equals(State.Ready))
		{
			System.out.println("Copying Proceeds Until All Copies Are Complete.");
			System.out.println("Ready State Changed To Copying State.\n");
			this.setCurrentState(State.Copying);
			System.out.println("Current State :- " +getCurrentState());
			
		}
		else
		{
			System.out.println("The Size And The Number Of Copies Are Changed.\n");
		}
	}
	
	public void AfterCopying()
	{
		if(this.getCurrentState().equals(State.Copying))
		{
			System.out.println("Machine Is In Ready State.");
			System.out.println("Copying State Changed To Ready State.\n");
			this.setCurrentState(State.Ready);
			System.out.println("Current State :- " +getCurrentState());
		}
	}



}

Test.java

package ccoew.it.i3.client;

import ccoew.it.i3.businesslogic.*;

public class Test 
{
	public static void main(String[] args)
	{
		CopyMachine CM = new CopyMachine();
		CM.PowerOFF();
		CM.PowerON();
		CM.AfterInitialCheck();
		CM.StartButtonPushed();
		CM.AfterCopying();
	}
}


//output

Current State :- OFF
Machine Is In OFF State.

Current State :- OFF

OFF State Changed To Warming State.


Ready Light Starts Flashing.
Current State :- Warming
Ready Light Is Turned On And It Displays The Number Of Copies As One And Size As Normal On The Display Panel.
Warming State Changed To Ready State.

Current State :- Ready
Copying Proceeds Until All Copies Are Complete.
Ready State Changed To Copying State.

Current State :- Copying
Machine Is In Ready State.
Copying State Changed To Ready State.

Current State :- Ready


